# -*- coding: utf-8 -*-
"""DataImmersion-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TBbljDIKWgnHCI7o8gphmE9gMMZgxD3Q
"""

import pandas as pd

data_url = "https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv"

data = pd.read_csv(data_url)

data.head()

data.sample(10) # Outputs a 'Data frame'

type(data)

data["Bairro"]

data[["Bairro", "Valor"]]

type(data["Bairro"])

data["Bairro"][1288]

data.info()

data.Metragem.mean()

data["Metragem"].mean()

sum(data["Bairro"] == "Vila Mariana") # Verifying if in the dataset exists a certain string

has_properties_in_vila_mariana = (data["Bairro"] == "Vila Mariana")
has_properties_in_vila_mariana

properties_in_vila_mariana = data[has_properties_in_vila_mariana]
properties_in_vila_mariana

properties_in_vila_mariana["Metragem"].mean()

data["Bairro"].value_counts()

number_of_district = data["Bairro"].value_counts()
 
 number_of_district.head(10).plot.bar()

data["Valor"][0]

data["Valor"][0].split()

data["Valor"].str.split(expand = True)

data["Valor"].str.split(expand = True)[0].unique()

data["Valor"].str.split(expand = True)[1].unique()

data["Valor"].str.split(expand = True)[2].unique()

data[["Currency", "Announced_Value", "Type_Advertisement"]] = data["Valor"].str.split(expand = True)
data.head()

data[data["Type_Advertisement"].isnull()]["Type_Advertisement"].unique() # Verify if it has only 'None' values

properties_to_sale = data[data["Type_Advertisement"].isnull()]
properties_to_sale

properties_to_sale.info()

properties_to_sale["Announced_Value"].str.replace(".", "").astype(float)

properties_to_sale["Announced_Value_Converted"] = properties_to_sale["Announced_Value"].str.replace(".", "").astype(float)
properties_to_sale.info()

properties_to_sale["Announced_Value_Converted"].plot.hist(bins = 50)

properties_to_sale.describe()

pd.describe_option()

pd.set_option("display.precision", 2)
pd.set_option("display.float_format", lambda x: "%.2f" % x)
properties_to_sale.describe()

properties_to_sale[["Rua", "Bairro", "Cidade"]].describe(include = "all")

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 8))

sns.set()
ax = sns.histplot(data = properties_to_sale, x = "Announced_Value_Converted", kde = True)
ax.set_title("Histogram - Properties value")

plt.xlim((-50, 10000000))
plt.show()

properties_to_sale.head()

properties_to_sale["Metreage_Value_m2"] = properties_to_sale["Announced_Value_Converted"] / properties_to_sale["Metragem"]
properties_to_sale.head()

properties_to_sale.groupby("Bairro").mean()

district_data = properties_to_sale.groupby("Bairro").sum()
district_data

district_data["District_Value_m2"] = district_data["Announced_Value_Converted"] / district_data["Metragem"]
district_data

properties_to_sale.groupby("Bairro").mean().loc["Vila Mariana"]

district_data.loc["Vila Mariana"]

district_data.loc["Vila Mariana"]["District_Value_m2"]

most_valuable_districts = properties_to_sale["Bairro"].value_counts()[:10].index

district_data.reset_index(inplace = True)
district_data

district_data.query("Bairro in @most_valuable_districts")

plt.figure(figsize=(10, 8))
ax = sns.barplot(x = "Bairro", y = "District_Value_m2", data = district_data.query("Bairro in @most_valuable_districts"))
ax.tick_params(axis = "x", rotation = 45)

plt.figure(figsize=(10, 8))
ax = sns.boxplot(data = properties_to_sale.query("Bairro in @most_valuable_districts"), x = "Bairro", y = "Announced_Value_Converted")
ax.tick_params(axis = "x", rotation = 45)
plt.show()

plt.figure(figsize=(10, 8))
ax = sns.boxplot(data = properties_to_sale.query("Bairro in @most_valuable_districts & Metragem < 30000"), x = "Bairro", y = "Metragem")
ax.tick_params(axis = "x", rotation = 45)
plt.show()

ibge_url = "https://gist.githubusercontent.com/tgcsantos/85f8c7b0a2edbc3e27fcad619b37d886/raw/a4954781e6bca9cb804062a3eea0b3b84679daf4/Basico_SP1.csv"
pd.read_csv(ibge_url)